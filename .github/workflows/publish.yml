name: Create Release and Publish

on:
  pull_request:
    types: [closed]
    branches:
      - main

  workflow_dispatch:
    inputs:
      major:
        description: 'Bump major version'
        required: false
        default: 'false'
      minor:
        description: 'Bump minor version'
        required: false
        default: 'false'

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    outputs:
      new_version: ${{ env.NEW_VERSION }}
      new_version_no_v: ${{ env.NEW_VERSION_NO_V }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN  }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Determine version bump
        id: bump_version
        run: |
          BUMP_TYPE="patch"
          
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'major') }}" == "true" ]]; then
            BUMP_TYPE="major"
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'minor') }}" == "true" ]]; then
            BUMP_TYPE="minor"
          fi
          
          current_version=${LATEST_TAG#v}
          IFS='.' read -r major minor patch <<< "$current_version"
          
          case $BUMP_TYPE in
            major)
              new_version="$((major + 1)).0.0"
              ;;
            minor)
              new_version="${major}.$((minor + 1)).0"
              ;;
            patch)
              new_version="${major}.${minor}.$((patch + 1))"
              ;;
          esac
          
          echo "NEW_VERSION=v${new_version}" >> $GITHUB_ENV
          echo "NEW_VERSION_NO_V=${new_version}" >> $GITHUB_ENV

      - name: Update package.json version
        run: |
          npm version ${{ env.NEW_VERSION_NO_V }} --no-git-tag-version
          
      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"* %s (%h)" --no-merges)
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Commit version update
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add package.json
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
          git push

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          body: |
            ## Changes
            ${{ env.CHANGELOG }}
            
            ## Pull Request
            #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}
          draft: false
          prerelease: false
          token: ${{ secrets.PAT_TOKEN }}
          make_latest: true
          generate_release_notes: false

  test:
    needs: [release] 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main  
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
  
  build:
    runs-on: ubuntu-latest
    needs: [test, release]  
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main  
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [build, release]  

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
